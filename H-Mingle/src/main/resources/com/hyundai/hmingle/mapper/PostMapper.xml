<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyundai.hmingle.mapper.PostMapper">
	
	<insert id="save" parameterType="postCreateDto" >
		INSERT INTO post (id, content, member_id, channel_id, read_count, created_date)
		VALUES (SEQ_POST_ID.nextval, #{content}, #{memberId}, #{channelId}, 0, sysdate)
		<selectKey keyProperty="postId" resultType="Long" order="AFTER">
			SELECT SEQ_POST_ID.currval
			FROM dual
		</selectKey>
	</insert>

    <select id="findById" parameterType="long" resultType="post">
        select id, content, member_id
        from post
        where id = #{id}
    </select>

	<select id="getPostDetail" resultType="postDetailResponse">
		SELECT
			p.id as post_id,
			p.content,
			p.read_count,
			m.nickname,
			p.channel_id,
			p.created_date,
			(SELECT count(id)
			 FROM heart
			 WHERE removed=0) as likes_count,
			(SELECT id
			 FROM heart
			 WHERE post_id=#{postId} AND member_id=#{memberId} AND removed=0) as liked
		FROM post p, member m
		WHERE p.member_id=m.id and p.id=#{postId} AND p.removed=0
	</select>

	<select id="getPostId" statementType="CALLABLE">
		{ call GetPreviousAndNextPostId(
				#{postId, mode=IN, jdbcType=NUMERIC},
				#{previousId, mode=OUT, jdbcType=NUMERIC},
				#{subsequentId, mode=OUT, jdbcType=NUMERIC}
		)}
	</select>

	<update id="removePost" parameterType="postDeleteDto">
		UPDATE post SET removed=1, MODIFIED_DATE = sysdate
		WHERE id=#{postId} AND member_id=#{memberId}
		<selectKey keyColumn="id" resultType="Long" order="BEFORE">
			SELECT id
			FROM post
			WHERE post_id=#{postId} AND member_id=#{memberId}
		</selectKey>
	</update>

	<update id="updatePost" parameterType="postUpdateRequest">
		UPDATE post SET content=#{content}, MODIFIED_DATE = sysdate
		WHERE id=#{postId}
	</update>

	<select id="findPostCountByMemberId" parameterType="long" resultType="int">
		select count(id)
		from post
		where member_id = #{member_id}
	</select>

	<select id="findPostByChannelId" parameterType="long" >
		SELECT id
		FROM post
		WHERE channel_id = #{channel_id} AND removed=0
	</select>

	<update id="upReadCount">
		UPDATE post SET read_count = read_count+1
		WHERE id=#{postId}
	</update>

</mapper>